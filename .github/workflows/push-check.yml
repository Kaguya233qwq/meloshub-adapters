name: Main Branch Guard

on:
  push:
    branches:
      - main

jobs:
  validate-and-verify:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          cache: true

      - name: Build
        run: go build ./...

      - name: Download dependencies
        run: go mod download

      - name: Lint with Go Official Tools
        run: |
          if [ -z "$(go list ./...)" ]; then
              echo "No packages to test."
          else
            echo "Running go vet to check for suspicious constructs..."
            go vet ./...
            
            echo "Checking for unformatted files..."
            unformatted=$(gofmt -l .)
            if [ -n "$unformatted" ]; then
              echo "Error: The following files are not formatted. Please run 'go fmt ./...' locally and commit the changes."
              echo "$unformatted"
              exit 1
            fi
            echo "All files are correctly formatted."
          fi

      - name: Verify Generated Files Consistency
        run: |
          echo "Running generators to verify consistency..."

          go run github.com/meloshub/meloshub-tools/cmd/autoimport@latest --output ./all/all.go --pkg all
          go run github.com/meloshub/meloshub-tools/cmd/metagen@latest --output adapters.yaml
          echo "Checking for differences between generated files and committed files..."
          git_status=$(git status --porcelain)
          if [ -n "$git_status" ]; then
            echo "Error: Generated files are out of sync with the source code."
            echo "The following differences were found:"
            echo "$git_status"
            echo "Please run the generation tools locally and commit the changes, or ensure the bot's commit was included in the PR."
            exit 1
          fi
          echo "Generated files are consistent. Check passed."

      - name: Run Go Vulnerability Check
        run: go install golang.org/x/vuln/cmd/govulncheck@latest && govulncheck ./...